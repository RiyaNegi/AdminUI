{"version":3,"sources":["Constants.js","context/ActionContext.js","components/searchBar/index.js","components/editModal/index.js","components/DataTable/index.js","components/Admin.js","App.js","index.js"],"names":["ROLES","text","value","ActionContext","createContext","ActionProvider","children","useState","data","setData","filteredInfo","setFilteredInfo","sortedInfo","setSortedInfo","selectedRows","setSelectedRow","isModalVisible","setIsModalVisible","record","setRecord","form","setForm","error","setError","searchedList","setSearchedList","clearFilters","handleCancel","validateEmail","email","test","String","toLowerCase","useEffect","axios","get","then","res","newDataArray","map","i","key","uuid","Provider","handleChange","pagination","filters","sorter","handleInputChange","e","newData","filter","name","includes","target","role","onSelectChange","selectedRowKeys","onDelete","showModal","handleOk","onEditRow","event","preventDefault","OnSubmitForm","rec","find","val","Index","findIndex","onEditRole","Search","Input","useContext","className","placeholder","onChange","enterButton","Option","Select","recordKey","action","type","onClick","visible","onOk","onCancel","style","color","columns","title","dataIndex","ellipsis","filteredValue","onFilter","a","b","length","sortOrder","columnKey","order","render","_","hasSelected","rowSelection","disabled","marginLeft","dataSource","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d26b8134.chunk.js","sourcesContent":["export const API_URL =\n  \"https://geektrust.s3-ap-southeast-1.amazonaws.com/adminui-problem/members.json\";\nexport const ROLES = [\n  { text: \"Admin\", value: \"admin\" },\n  { text: \"Member\", value: \"member\" },\n];\n","import React, { createContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport uuid from \"react-uuid\";\nimport { API_URL } from \"../Constants\";\n\nexport const ActionContext = createContext();\n\nexport const ActionProvider = ({ children }) => {\n  const [data, setData] = useState();\n  const [filteredInfo, setFilteredInfo] = useState(null);\n  const [sortedInfo, setSortedInfo] = useState(null);\n  const [selectedRows, setSelectedRow] = useState([]);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [record, setRecord] = useState(null);\n  const [form, setForm] = useState({});\n  const [error, setError] = useState(null);\n  const [searchedList, setSearchedList] = useState(null);\n\n  const handleChange = (pagination, filters, sorter) => {\n    setFilteredInfo(filters);\n    setSortedInfo(sorter);\n  };\n  const clearFilters = () => {\n    setFilteredInfo(null);\n    setSelectedRow([]);\n  };\n\n  const handleInputChange = (e) => {\n    const newData = data.filter(\n      (i) =>\n        i.name.toLowerCase().includes(e.target.value.toLowerCase()) ||\n        i.email.toLowerCase().includes(e.target.value.toLowerCase()) ||\n        i.role.toLowerCase().includes(e.target.value.toLowerCase())\n    );\n    setSearchedList(newData);\n  };\n\n  const getData = () => {\n    axios.get(API_URL).then((res) => {\n      const newDataArray = res.data.map((i) => ({ ...i, key: uuid() }));\n      setData(newDataArray);\n    });\n  };\n\n  const onSelectChange = (selectedRowKeys) => {\n    setSelectedRow(selectedRowKeys);\n  };\n\n  const onDelete = () => {\n    const newData = data.filter((i) => !selectedRows.includes(i.key));\n    setData(newData);\n    setSearchedList(newData);\n    clearFilters();\n  };\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n    setRecord(null);\n    setForm(null);\n    setError(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n    setRecord(null);\n    setForm(null);\n    setError(false);\n  };\n\n  const onEditRow = (event, name) => {\n    event.preventDefault();\n    setForm({ ...form, [name]: event.target.value });\n  };\n\n  const onEditRole = (value) => {\n    setForm({ ...form, role: value });\n  };\n\n  const validateEmail = (email) => {\n    const re =\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  };\n\n  const OnSubmitForm = () => {\n    if ((form.email && validateEmail(form.email)) || !form.email) {\n      const rec = data.find((val) => val.key === form.key);\n      const newData = data;\n      const Index = newData.findIndex((val) => val.key === form.key);\n      newData[Index] = { ...rec, ...form };\n      setSearchedList(newData);\n      handleCancel();\n    } else if (!validateEmail(form.email)) {\n      setError(\"Enter valid email\");\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  useEffect(() => {\n    setForm({ ...form, key: record?.key });\n  }, [record]);\n  return (\n    <>\n      <ActionContext.Provider\n        value={{\n          data: data,\n          handleChange: handleChange,\n          clearFilters: clearFilters,\n          filteredInfo: filteredInfo,\n          sortedInfo: sortedInfo,\n          handleInputChange: handleInputChange,\n          onSelectChange: onSelectChange,\n          selectedRows: selectedRows,\n          onDelete: onDelete,\n          isModalVisible: isModalVisible,\n          showModal: showModal,\n          handleOk: handleOk,\n          handleCancel: handleCancel,\n          record: record,\n          form: form,\n          setRecord: setRecord,\n          onEditRow: onEditRow,\n          OnSubmitForm: OnSubmitForm,\n          onEditRole: onEditRole,\n          error: error,\n          searchedList: searchedList,\n        }}\n      >\n        {children}\n      </ActionContext.Provider>\n    </>\n  );\n};\n","import React, { useState, useContext } from \"react\";\nimport { ActionContext } from \"../../context/ActionContext\";\nimport { Input, Space } from \"antd\";\nimport \"./index.css\";\n\nconst { Search } = Input;\n\nconst Index = () => {\n  const action = useContext(ActionContext);\n  const handleInputChange = action.handleInputChange;\n\n  return (\n    <div className=\"search-bar \">\n      <Search\n        placeholder=\"input search text\"\n        // onSearch={(e) => handleInputChange(e)}\n        onChange={(e) => handleInputChange(e)}\n        enterButton\n      />\n    </div>\n  );\n};\n\nexport default Index;\n","import React, { useContext } from \"react\";\nimport \"antd/dist/antd.css\";\nimport \"./index.css\";\nimport { Modal, Button, Input, Select } from \"antd\";\nimport { ActionContext } from \"../../context/ActionContext\";\nimport { ROLES } from \"../../Constants\";\n\nconst { Option } = Select;\n\nconst Index = ({ recordKey }) => {\n  const action = useContext(ActionContext);\n  const showModal = action.showModal;\n  const isModalVisible = action.isModalVisible;\n  const handleCancel = action.handleCancel;\n  const record = action.record;\n  const form = action.form;\n  const onEditRow = action.onEditRow;\n  const OnSubmitForm = action.OnSubmitForm;\n  const setRecord = action.setRecord;\n  const onEditRole = action.onEditRole;\n  const error = action.error;\n\n  return (\n    <>\n      <Button\n        type=\"primary\"\n        onClick={() => (setRecord(recordKey), showModal())}\n      >\n        Edit\n      </Button>\n      <Modal\n        visible={isModalVisible}\n        onOk={() => OnSubmitForm()}\n        onCancel={handleCancel}\n      >\n        <h3>Email</h3>\n        <Input\n          value={form?.email || record?.email}\n          onChange={(e) => onEditRow(e, \"email\")}\n          className=\"input-bar\"\n        />\n        {error && <small style={{ color: \"red\" }}>{error}</small>}\n        <h3>Name</h3>\n        <Input\n          value={form?.name || record?.name}\n          onChange={(e) => onEditRow(e, \"name\")}\n          className=\"input-bar\"\n        />\n        <h3>Role</h3>\n        <Select\n          value={form?.role || record?.role}\n          onChange={(value) => onEditRole(value)}\n          className=\"input-bar input-select\"\n        >\n          {ROLES.map((i) => (\n            <Option value={i.value}>{i.text}</Option>\n          ))}\n          ){\" \"}\n        </Select>\n      </Modal>\n    </>\n  );\n};\n\nexport default Index;\n","import React, { useState, useContext } from \"react\";\nimport { Table, Button, Space } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport { ActionContext } from \"../../context/ActionContext\";\nimport \"./index.css\";\nimport EditModal from \"../editModal\";\nimport { ROLES } from \"../../Constants\";\n\nconst Index = () => {\n  const action = useContext(ActionContext);\n  const data = action.data;\n  const filteredInfo = action.filteredInfo;\n  const sortedInfo = action.sortedInfo;\n  const handleChange = action.handleChange;\n  const onSelectChange = action.onSelectChange;\n  const selectedRows = action.selectedRows;\n  const onDelete = action.onDelete;\n  const setRecord = action.setRecord;\n  const searchedList = action.searchedList;\n\n  const columns = [\n    {\n      title: \"Name\",\n      dataIndex: \"name\",\n      key: \"name\",\n      ellipsis: true,\n    },\n    {\n      title: \"Email\",\n      dataIndex: \"email\",\n      key: \"email\",\n      ellipsis: true,\n    },\n    {\n      title: \"Role\",\n      dataIndex: \"role\",\n      key: \"role\",\n      filters: ROLES,\n      filteredValue: filteredInfo?.role || null,\n      onFilter: (value, record) => record.role.includes(value),\n      sorter: (a, b) => a.role.length - b.role.length,\n      sortOrder: sortedInfo?.columnKey === \"role\" && sortedInfo?.order,\n      ellipsis: true,\n    },\n    {\n      title: \"Edit\",\n      dataIndex: \"edit\",\n      key: \"edit\",\n      render: (_, record) => <EditModal recordKey={record} />,\n    },\n  ];\n  const hasSelected = selectedRows.length > 0;\n  const rowSelection = {\n    selectedRows,\n    onChange: onSelectChange,\n  };\n\n  return (\n    <>\n      <Button type=\"primary\" onClick={onDelete} disabled={!hasSelected}>\n        Delete\n      </Button>\n      <span style={{ marginLeft: 8 }}>\n        {hasSelected ? `Selected ${selectedRows.length} items` : \"\"}\n      </span>\n      <Table\n        columns={columns}\n        rowSelection={rowSelection}\n        dataSource={searchedList || data}\n        onChange={handleChange}\n      />\n    </>\n  );\n};\n\nexport default Index;\n","import React from \"react\";\nimport \"./Admin.css\";\nimport SearchBar from \"./searchBar\";\nimport DataTable from \"./DataTable\";\n\nconst Index = () => {\n  return (\n    <div className=\"data-body\">\n      <SearchBar />\n      <div className=\"data-table\">\n        <DataTable />\n      </div>\n    </div>\n  );\n};\n\nexport default Index;\n","import Admin from \"./components/Admin\";\nimport { ActionProvider } from \"./context/ActionContext\";\n\nfunction App() {\n  return (\n    <ActionProvider>\n      <Admin />\n    </ActionProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}